@Nested
@ExtendWith(MockitoExtension.class)
class JwtServiceTest {

    @InjectMocks
    private JwtService jwtService;

    @Mock
    Claims claims;

    @Mock
    private AuthenticationUserService authenticationUserService;

    private final String secretKey= Base64.getEncoder().encodeToString(Keys.secretKeyFor(SignatureAlgorithm.HS512).getEncoded());

    @Value("${security.jwt.secret.issuer}")
    private String issuer = "testIssuer";



    @BeforeEach
    void setUp() {
        Claims jwtClaims = Jwts.claims(claims);
        claims.setIssuer(issuer);


    }
    @Test
    void testGenerateUserLoginToken() {


        UserTokenRequest request = new UserTokenRequest();
        request.setUsername("testUser");
        request.setRoles(Collections.singletonList("ROLE_USER"));
        request.setTokenType(TokenType.USER);
        request.setPassword("password");
        request.setExpirationTime(System.currentTimeMillis() + 10000);

        String token = jwtService.generateUserLoginToken(request);
        assertNotNull(token);
    }

    @Test
    void testGenerateAccessToken() {
        AccessTokenRequest request = new AccessTokenRequest();
        request.setUsername("testUser");
        request.setMId("MID123");
        request.setRoles(Collections.singletonList("ROLE_ADMIN"));
        request.setTokenType(TokenType.ACCESS);
        request.setExpirationTime(System.currentTimeMillis() + 10000);

        String token = jwtService.generateAccessToken(request);
        assertNotNull(token);
    }

public String generateAccessToken(AccessTokenRequest accessTokenRequest) {
        Map<String, Object> claims = new HashMap<>();
        claims.put(USERNAME, accessTokenRequest.getUsername());
        claims.put(MID, accessTokenRequest.getMId());
        claims.put(ROLE, accessTokenRequest.getRoles());
        claims.put(TYPE, accessTokenRequest.getTokenType());
        return generateToken(claims, accessTokenRequest.getUsername(), accessTokenRequest.getExpirationTime());
    }

 private String generateToken(Map<String, Object> claims, String userName, long expirationTime) {
        logger.info("ClassName - JwtService,MethodName - generateToken,generate a JWT token  with the specified claims, username, and expiration time.");
        Claims jwtClaims = Jwts.claims(claims);
        jwtClaims.setSubject(userName);
        jwtClaims.setIssuer(issuer);
        jwtClaims.setIssuedAt(new Date(System.currentTimeMillis()));
        jwtClaims.setExpiration(new Date(expirationTime));
        return Jwts.builder().setClaims(jwtClaims).signWith(getSignKey(), SignatureAlgorithm.HS512).compact();
    }

    private final AuthenticationUserService authenticationUserService;
    @Value("${security.jwt.secret.key}")
    private String secretKey;
    @Value("${security.jwt.secret.issuer}")
    private String issuer;

Decode argument cannot be null.
java.lang.IllegalArgumentException: Decode argument cannot be null.
	at io.jsonwebtoken.lang.Assert.notNull(Assert.java:82)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:34)
	at com.sbi.epay.authentication.service.JwtService.getSignKey(JwtService.java:170)
	at com.sbi.epay.authentication.service.JwtService.generateToken(JwtService.java:69)
	at com.sbi.epay.authentication.service.JwtService.generateUserLoginToken(JwtService.java:84)
	at com.sbi.epay.authentication.service.JwtServiceTest.testGenerateUserLoginToken(JwtServiceTest.java:69)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)


OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended
> Task :test
JwtServiceTest > testGenerateUserLoginToken() FAILED
    java.lang.IllegalArgumentException at JwtServiceTest.java:69
Disconnected from the target VM, address: 'localhost:51117', transport: 'socket'
1 test completed, 1 failed
> Task :test FAILED
FAILURE: Build failed with an exception.
* What went wrong:
Execution failed for task ':test'.
> There were failing tests. See the report at: file:///D:/Projects/epay_java_utilities/epay_java_utilities/authentication-service/build/reports/tests/test/index.html
