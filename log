@Schema(name = "MerchantDto")
public class MerchantDto implements Serializable {

    @Schema(description = "Merchant ID", example = "MID001")
    @JsonProperty("mId")
    private String mId;

    @Schema(description = "Name of the merchant", example = "John Doe Enterprises")
    private String merchantName;

    @Schema(description = "Business name", example = "John's Electronics")
    private String businessName;

    @Schema(description = "Brand name associated with the merchant", example = "J-Electro")
    private String brandName;

    @Schema(description = "Business category", example = "Retail")
    private String businessCategory;

    @Schema(description = "Category code", example = "R123")
    private String categoryCode;

    @Schema(description = "Address line 1", example = "123 Main Street")
    private String addressline1;

    @Schema(description = "Address line 2", example = "Suite 456")
    private String addressline2;

    @Schema(description = "State", example = "California")
    private String state;

    @Schema(description = "City", example = "Los Angeles")
    private String city;

    @Schema(description = "Country", example = "USA")
    private String country;

    @Schema(description = "Pincode", example = "90001")
    private String pincode;

    @Schema(description = "Mobile number", example = "+1234567890")
    private String mobileNumber;

    @Schema(description = "Phone number", example = "+1987654321")
    private String phoneNumber;

    @Schema(description = "Primary email address", example = "primary@example.com")
    private String primaryEmail;

    @Schema(description = "Secondary email address", example = "secondary@example.com")
    private String secondaryEmail;

    @Schema(description = "Merchant website URL", example = "https://www.j-electro.com")
    private String merchantUrl;

    @Schema(description = "Merchant status", example = "ACTIVE")
    private MerchantStatus status;

    @Schema(description = "Validity start time (epoch time)", example = "1672531200000")
    private Long validityStartTime;

    @Schema(description = "Validity end time (epoch time)", example = "1704067200000")
    private Long validityEndTime;

    @Schema(description = "Onboarding time (epoch time)", example = "1672531200000")
    private Long onboardingTime;

    @Schema(description = "Encryption algorithm used", example = "AES256")
    private String encryptedAlgo;

    @Schema(description = "Relationship Manager's name", example = "Alice Johnson")
    private String rmName;

    @Schema(description = "Bank code", example = "BANK123")
    private String bankCode;

    @Schema(description = "Branch code", example = "BR123")
    private String branchCode;

    @Schema(description = "GST number", example = "27ABCDE1234F1Z5")
    private String gstNumber;

    @Schema(description = "Chargeback allowed flag", example = "true")
    @JsonProperty("isChargebackAllowed")
    private boolean isChargebackAllowed;

    @Schema(description = "Aggregator name", example = "AggregatorCorp")
    private String aggregator;

    @Schema(description = "Notification preferences", example = "EMAIL")
    private String notification;

    @Schema(description = "Created by user", example = "admin")
    private String createdBy;

    @Schema(description = "Creation timestamp (epoch time)", example = "1672531200000")
    private Long createdAt;

    @Schema(description = "Updated by user", example = "admin")
    private String updatedBy;

    @Schema(description = "Updated timestamp (epoch time)", example = "1672627600000")
    private Long updatedAt;
}



@Schema(name = "MerchantUserDto")
public class MerchantUserDto implements Serializable {

    @JsonIgnore
    @Schema(description = "Unique user ID", example = "550e8400-e29b-41d4-a716-446655440000")
    private UUID id;

    @JsonIgnore
    @Schema(description = "Parent user ID", example = "550e8400-e29b-41d4-a716-446655440001")
    private UUID parentUserId;

    @JsonIgnore
    @Schema(description = "Version of the record", example = "1")
    private int version;

    @Schema(description = "User name", example = "johndoe")
    private String userName;

    @Schema(description = "First name", example = "John")
    private String firstName;

    @Schema(description = "Middle name", example = "A")
    private String middleName;

    @Schema(description = "Last name", example = "Doe")
    private String lastName;

    @Schema(description = "Email address", example = "johndoe@example.com")
    private String email;

    @Schema(description = "Primary phone number", example = "+1234567890")
    private String primaryPhone;

    @Schema(description = "Secondary phone number", example = "+1987654321")
    private String secondaryPhone;

    @Schema(description = "Mobile phone number", example = "+11234567890")
    private String mobilePhone;

    @Schema(description = "Office phone number", example = "+11987654321")
    private String officePhone;

    @Schema(description = "Country code", example = "USA")
    @JsonProperty("country")
    private String countryCode;

    @Schema(description = "State code", example = "CA")
    @JsonProperty("state")
    private String stateCode;

    @Schema(description = "Pincode", example = "90001")
    @JsonProperty("pincode")
    private String pinCode;

    @Schema(description = "City", example = "Los Angeles")
    private String city;

    @Schema(description = "Remarks or notes", example = "Verified user")
    private String remark;

    @JsonIgnore
    @Schema(description = "Role ID", example = "550e8400-e29b-41d4-a716-446655440002")
    private UUID role;

    @Schema(description = "Role name", example = "Admin")
    private String roleName;

    @Schema(description = "User status", example = "ACTIVE")
    private UserStatus status;

    @JsonIgnore
    @Schema(description = "Password (encrypted)", example = "hashed_password_here")
    private String password;

    @JsonIgnore
    @Schema(description = "Password expiry time (epoch time)", example = "1704067200000")
    private Long passwordExpiryTime;

    @JsonIgnore
    @Schema(description = "Login failure attempts", example = "2")
    private int loginFailAttempt;

    @Schema(description = "Created by user", example = "admin")
    private String createdBy;

    @Schema(description = "Creation timestamp (epoch time)", example = "1672531200000")
    private Long createdAt;

    @Schema(description = "Updated by user", example = "admin")
    private String updatedBy;

    @Schema(description = "Updated timestamp (epoch time)", example = "1672627600000")
    private Long updatedAt;
}

