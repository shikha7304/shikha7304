protected List<MerchantInfoResponse> getParentAssignedMIds(MerchantUserDto merchantUser, List<MerchantInfoDto> assignedMIds) {
        log.info("Fetching unassigned MIDs for user ID: {}", merchantUser.getId());
        List<MerchantInfoResponse> unAssignedMerchantInfo = new ArrayList<>();

        if (ObjectUtils.isNotEmpty(merchantUser.getParentUserId())) {
            //Step 2: Get Parent Assigned MIDs List
            List<MerchantInfoDto> parentAssignedMIds = merchantInfoDao.getAllAccessMerchantInfoForMerchantUser(merchantUser.getParentUserId());

            //Step 3: Remove Assigned MIDs List from Parent Assigned MIDs List
            parentAssignedMIds.removeAll(assignedMIds);
            if (CollectionUtils.isNotEmpty(parentAssignedMIds)) {
                unAssignedMerchantInfo.addAll(merchantMapper.mapMerchantInfoDTOListToResponseList(parentAssignedMIds));
            }
        }
        log.info("Successfully fetched unassigned MIDs for user ID: {}", merchantUser.getId());
        return unAssignedMerchantInfo;
    }
