   /**
     * Validate authentication respective request object based on token type.
     *
     * @param tokenRequest gets request for validation.
     */
    public static void validAuthRequest(TokenRequest tokenRequest) {
        List<ErrorDto> errorDtoList = new ArrayList<>();
        switch (tokenRequest.getTokenType()) {
            case ACCESS -> validAccessTokenRequest((AccessTokenRequest) tokenRequest, errorDtoList);
            case TRANSACTION -> validTransactionTokenRequest((TransactionTokenRequest) tokenRequest, errorDtoList);
            case USER -> validUserTokenRequest((UserTokenRequest) tokenRequest, errorDtoList);
            default ->
                    errorDtoList.add(new ErrorDto(EPayAuthenticationErrorConstants.INVALID_ERROR_CODE, MessageFormat.format(EPayAuthenticationErrorConstants.INVALID_ERROR_MESSAGE, TOKEN_TYPE)));
        }

        if (!CollectionUtils.isEmpty(errorDtoList)) {
            logger.error("Error -> ", errorDtoList);
            throw new EPaySecurityException(errorDtoList);
        }
    }
             errorDtoList.add(new ErrorDto(EPayAuthenticationErrorConstants.INVALID_ERROR_CODE, MessageFormat.format(EPayAuthenticationErrorConstants.INVALID_ERROR_MESSAGE, TOKEN_TYPE)));
        }
package com.sbi.epay.authentication.model;

import com.sbi.epay.authentication.util.enums.TokenType;
import lombok.Data;

import java.util.List;

/**
 * Class Name: AuthRequest
 * *
 * Description: This dto class stores variables relate to  JWT token generation request.
 * *
 * Author: V1018217(Nirvay K. Bikram)
 * Copyright (c) 2024 [State Bank of India]
 * All rights reserved
 * *
 * Version:1.0
 */
@Data
public abstract class TokenRequest {

    /**
     * JWT request passing tokenType variable as numeration to generate JWT token.
     */
    private TokenType tokenType;

    /**
     * JWT request passing username variable as string to generate JWT token.
     */
    private String username;

    /**
     * JWT request passing pwd variable as string  to generate JWT token.
     */
    private String password;

    /**
     * JWT request passing role variable as string  to generate JWT token.
     */
    private List<String> roles;

    /**
     * JWT request passing expirationTime variable as long/numbers in milliseconds  to generate JWT token.
     */
    private long expirationTime;
}
