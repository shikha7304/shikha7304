@GetMapping("/token")
    @Operation(summary = "Merchant User Token Validation", description = "Validates the token provided in the authorization header.")
    @ApiResponses({@ApiResponse(responseCode = "200", content = {@Content(mediaType = "application/json", schema = @Schema(implementation = String.class))})})
    public MerchantResponse<Void> validateToken( @Parameter(
            description = "Authorization token for the user",
            required = true,
            example = "eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIkFETUlOIl0sInRva2VuVHlwZSI6IlVTRVIiLCJ1c2VybmFtZSI6InVzZXIxIiwic3ViIjoiZ2RqZmdza2pmaHNkamtoa2Zsa2Rsa3NkbGZrc2tmd3BlcmlwM2tlM2xlM2xtbGRybmtmbmhpZXdqZmVqZm9rZXBma2xka2ZvaWtmb2tvcmszZGtsd2VkbHN2Zmx2a2ZrdmxrZGZ2b2RrdmNkb2tybzMiLCJpYXQiOjE3MzU2MzYwNzAsImV4cCI6MTY5MjIzNDQ0Njg3MH0.WQFZwgDlMaJOZnPf7KnITRNQhdDbsX6UrbQkI43PCsM9Yqb4DT1k13x31HtNquBB-PWUAcOQIWKN-kuNi9WoAA"
            ) @RequestHeader("Authorization") String token)
    {
        log.info("Received request for Token Validation");
        return MerchantResponse.<Void>builder().status(MerchantConstant.RESPONSE_SUCCESS).build();
    }



Validates the token provided in the authorization header.

Parameters
Cancel
Name	Description
Authorization *
string
(header)
Authorization token for the user

eyJhbGciOiJIUzUxMiJ9.eyJyb2xlIjpbIkFETUlOIl0sInRva2VuVHlwZSI6IlVTRVIiLCJ1c2VybmFtZSI6InVzZXIxIiwic3ViIjoiZ2RqZmdza2pmaHNkamtoa2Zsa2Rsa3NkbGZrc2tmd3BlcmlwM2tlM2xlM2xtbGRybmtmbmhpZXdqZmVqZm9rZXBma2xka2ZvaWtmb2tvcmszZGtsd2VkbHN2Zmx2a2ZrdmxrZGZ2b2RrdmNkb2tybzMiLCJpYXQiOjE3MzU2MzYwNzAsImV4cCI6MTY5MjIzNDQ0Njg3MH0.WQFZwgDlMaJOZnPf7KnITRNQhdDbsX6UrbQkI43PCsM9Yqb4DT1k13x31HtNquBB-PWUAcOQIWKN-kuNi9WoAA
Execute
Clear
Responses
Curl

curl -X 'GET' \
  'http://localhost:9093/merchant/v1/validation/token' \
  -H 'accept: application/json'
Request URL
http://localhost:9093/merchant/v1/validation/token
Server response
Code	Details
400
Undocumented
Error: response status is 400

Response body
Download
{
  "status": 0,
  "errors": [
    {
      "errorCode": "400",
      "errorMessage": "Required request header 'Authorization' for method parameter type String is not present"
    }
  ]
}
Response headers
 access-control-allow-credentials: true 
 access-control-allow-headers: Authorization,Origin,X-Correlation-ID,Content-Type,Accept 
 access-control-allow-methods: POST,GET,PUT,OPTIONS 
 access-control-allow-origin: * 
 cache-control: no-cache,no-store,max-age=0,must-revalidate 
 connection: close 
 content-type: application/json 
 date: Fri,17 Jan 2025 10:44:14 GMT 
 expires: 0 
 pragma: no-cache 
 transfer-encoding: chunked 
 vary: Origin,Access-Control-Request-Method,Access-Control-Request-Headers 
 x-content-type-options: nosniff 
 x-frame-options: DENY 
 x-xss-protection: 0 
Responses
Code	Description	Links
200	
OK

Media type

application/json
Controls Accept header.
Example Value
Schema
"string"
