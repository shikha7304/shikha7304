
@NoArgsConstructor(access = AccessLevel.PRIVATE)
public class ErrorConstants {

    public static final String MANDATORY_ERROR_CODE = "7001";
    public static final String MANDATORY_ERROR_MESSAGE = "{0} is mandatory.";

    public static final String NOT_FOUND_ERROR_CODE = "7003";
    public static final String NOT_FOUND_ERROR_MESSAGE = "{0} is not found.";
    public static final String LOGIN_USER_NOT_FOUND_ERROR_MESSAGE = "Invalid User -> Please check UserName and Password";

    public static final String INVALID_ERROR_CODE = "7002";
    public static final String INVALID_ERROR_MESSAGE = "Invalid {0}. Reason : {1}";


@ExceptionHandler(InvalidFormatException.class)
public ResponseEntity<Object> handleInvalidUUIDException(InvalidFormatException ex) {
    ErrorDto errorDto;
    if (ex.getTargetType() == UUID.class) {
        String formattedMessage = MessageFormat.format(ErrorConstants.INVALID_ERROR_MESSAGE, "Request ID", "Invalid UUID format");
        errorDto = ErrorDto.builder()
                .errorCode(ErrorConstants.INVALID_ERROR_CODE)
                .errorMessage(formattedMessage)
                .build();
    } else {
        errorDto = ErrorDto.builder()
                .errorCode(ErrorConstants.GENERIC_ERROR_CODE)
                .errorMessage("Invalid request format.")
                .build();
    }
    return ResponseEntity.ok().body(MerchantResponse.builder()
            .status(MerchantConstant.RESPONSE_FAILURE)
            .errors(List.of(errorDto))
            .build());
}

