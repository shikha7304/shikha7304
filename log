@PostMapping("/download/merchantUsers")
    @Operation(summary = "Download merchant user details")
    @ApiResponses({@ApiResponse(responseCode = "200", content = {@Content(mediaType = "application/json", schema = @Schema(implementation = MerchantResponse.class ))})})
    public void downloadMerchantUsers(HttpServletResponse response) {
        log.info("Received request to download merchant user through : merchantUserGetRequest {}", response);
        merchantUserService.downloadMerchantUserReport(response);
    }
  public void downloadMerchantUserReport(HttpServletResponse response) {
//        log.info("Fetching merchant users for download: {}", merchantUserGetRequest);
        List<MerchantUser> merchantUserResponseList   = merchantUserDao.getMerchantUsers();


    }

public List<MerchantUser> getMerchantUsers() {
        String username = EPayIdentityUtil.getUserPrincipal().getUsername();
        MerchantUserDto merchantUser = getByUserName(username, UserStatus.ACTIVE);
        return merchantUserRepository.findAllById(merchantUser.getId());
    }

    List<MerchantUser> findAllById(@Param("Id") UUID ID);
