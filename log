
@Component
public class EPayAuthenticationEntryPoint implements AuthenticationEntryPoint {

    private final LoggerUtility logger = LoggerFactoryUtility.getLogger(this.getClass());

    @Override
    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authenticationException) throws IOException {
        logger.error("Error in Authentication for request {}, Error :{}", request, authenticationException.getMessage());
        response.setContentType(MediaType.APPLICATION_JSON_VALUE);
        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);

        ErrorDto errorDto = ErrorDto.builder().errorCode(String.valueOf(HttpStatus.UNAUTHORIZED.value())).errorMessage(authenticationException.getMessage()).build();

        AuthenticationResponse authenticationResponse = AuthenticationResponse.builder().status(0).errors(List.of(errorDto)).build();
        logger.error("Error in Authentication for request {} and send the authenticationResponse :{}", request, authenticationResponse);

        ObjectMapper mapper = new ObjectMapper();
        response.getWriter().write(mapper.writeValueAsString(authenticationResponse));
    }
}
