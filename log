public class KeyProviderService {
    private static final LoggerUtility log= LoggerFactoryUtility.getLogger(KeyProviderService.class);

    /**
     * This method will be used to get MEK .
     *
     * @param mek encrypted and encoded MEK (Merchant's Encryption Key)
     * @param kek encrypted and encoded KEK (Key Encryption Key)
     * @param aeK encoded AEK(Aggregators Encryption Key)
     * @return a SecretKey MEK
     */
    public static SecretKey getDecryptedMEK(String mek, String kek, String aeK, EncryptionDecryptionAlgo algorithm, GCMIvLength gcmIvLength, GCMTagLength gcmTagLength) throws EncryptionDecryptionException {
        log.debug("KeyProviderService :: getDecryptedMEK mek {}, kek {}, aeK {}, algorithm {}, gcmIvLength {} and gcmTagLength {}", mek, kek, aeK, algorithm, gcmIvLength, gcmTagLength);
        String encodedKeK = DecryptionService.decryptValueByStringKey(kek, aeK, algorithm, gcmIvLength, gcmTagLength);
        String encodedMeK = DecryptionService.decryptValueByStringKey(mek, encodedKeK, algorithm, gcmIvLength, gcmTagLength);
        return DecryptionService.decodedValue(encodedMeK);
    }
}
