/**
     * Validate MID to check if its exists and active
     * @param  mId of the merchant user.
     * @return MerchantResponse
     */
    @GetMapping("validate/{mId}")
    @Operation(summary = "API to validate mid", description = "Mid Validation during Login")
    public MerchantResponse<Boolean> validateMid (@PathVariable String mId) {
        log.info("Received request to validate Mid: {}",mId);
        return merchantUserService.validateMId(mId);
    }


  public MerchantResponse<Boolean> validateMId(String mId) {
        log.info("Validate mId: {}",mId);
        //Step 2 : Check mandatory fields
        merchantUserValidator.validateMid(mId);
        log.info("started mId validation for user: {}",mId);
        //Step 1  : Check if mId exists
        boolean isExists = merchantInfoDao.isExistsByMIdAndStatus(mId, MerchantStatus.ACTIVE.name());
        log.info("Returning merchant response for mid: {}",mId);
        return MerchantResponse.<Boolean>builder().status(MerchantConstant.RESPONSE_SUCCESS).data(List.of(isExists)).build();
    }

public void validateMid(String mId ) {
        errorDtoList = new ArrayList<>();
        checkMandatoryField(mId,VALID_MID );
        throwIfErrors();
    }
