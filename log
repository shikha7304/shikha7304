 @GetMapping("/users/{mid}")
    @Operation(summary = "share the all users info for that merchant.", description = "share the all users info for that merchant.")
    @ApiResponses({@ApiResponse(responseCode = "200", content = {@Content(mediaType = "application/json", schema = @Schema(implementation = MerchantResponse.class ))})})
    public MerchantResponse<MerchantUserResponse> getAllUser(@Parameter(description = "Merchant ID for Retrieving all users for a merchant.", required = true) @PathVariable String mid, @Parameter(description = "Pagination details for the request", required = false) @PageableDefault(size = 50, page = 0) Pageable pageable) {
        log.info("Received request to get userList based on mid: {}", mid);
        return adminService.getAllMerchantUsers(mid, pageable);
    }


http://localhost:9093/merchant/v1/admin/users/MID6?page=0&size=1&sort=%5B%22string%22%5D
Server response
Code	Details
500
Undocumented
Error: response status is 500

Response body
Download
{
  "status": 0,
  "errors": [
    {
      "errorCode": "3002",
      "errorMessage": "Sort expression '[\"string\"]: ASC' must only contain property references or aliases used in the select clause; If you really want to use something other than that for sorting, please use JpaSort.unsafe(â€¦)"
    }
  ]
}
Response headers
 access-control-allow-credentials: true 
 access-control-allow-headers: Authorization,Origin,X-Correlation-ID,Content-Type,Accept 
 access-control-allow-methods: POST,GET,PUT,OPTIONS 
 access-control-allow-origin: * 
 cache-control: no-cache,no-store,max-age=0,must-revalidate 
 connection: close 
 content-type: application/json 
 date: Sat,18 Jan 2025 14:31:42 GMT 
 expires: 0 
 pragma: no-cache 
 transfer-encoding: chunked 
 vary: Origin,Access-Control-Request-Method,Access-Control-Request-Headers 
 x-content-type-options: nosniff 
 x-frame-options: DENY 
 x-xss-protection: 0 
Responses
Code	Description	Links
200	
OK

Media type

application/json
Controls Accept header.
Example Value
Schema
{
  "status": 0,
  "data": [
    {}
  ],
  "count": 0,
  "total": 0,
  "errors": [
    {
      "errorCode": "string",
      "errorMessage": "string"
    }
  ]
