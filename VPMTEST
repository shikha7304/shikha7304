package com.epay.merchant.repository;

import com.epay.merchant.entity.LoginPasswordAudit;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.UUID;

public interface LoginPasswordAuditRepository extends JpaRepository<LoginPasswordAudit, UUID> {
}
package com.epay.merchant.repository;

import com.epay.merchant.entity.TokenManagement;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.Optional;
import java.util.UUID;

public interface TokenManagementRepository extends JpaRepository<TokenManagement, UUID> {

    @Query("FROM TokenManagement tm WHERE tm.userId = :userId AND tm.isValid = true")
    Optional<TokenManagement> findTokenByUserIdAndIsValidTrue(@Param("userId") UUID userId);

    boolean existsByTokenAndIsValidTrue(String token);

}
package com.epay.merchant.repository;

import com.epay.merchant.entity.MerchantUserRole;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import java.util.Optional;
import java.util.UUID;

/**
 * Class Name: MerchantUserRoleRepository
 * *
 * Description:
 * *
 * Author: Bhoopendra Rajput
 * <p>
 * Copyright (c) 2024 [State Bank of India]
 * All rights reserved
 * *
 * Version:1.0
 */
@Repository
public interface MerchantUserRoleRepository extends JpaRepository<MerchantUserRole, UUID> {
    /**
     * Searching UserRole in DB by role.
     *
     * @param role String
     * @return UserRole
     */
    Optional<MerchantUserRole> findByRole(String role);

    Optional<MerchantUserRole> findById(UUID roleId);
}
